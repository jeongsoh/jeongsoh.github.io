{"paragraphs":[{"title":"4.3.1 K-Means Clustering - 미터별 일별 사용량 특징 데이터셋 ","text":"%pyspark\n\"\"\"\n    135 개 Meter, 5 개 DCU에 대해 20191206 ~ 20200802 기간의 미터별 일별 사용량 특징 데이터셋 (241일)\n\"\"\"\nfrom pyspark.ml.feature import StringIndexer, OneHotEncoderEstimator, VectorAssembler, StandardScaler, MinMaxScaler\nfrom pyspark.ml.clustering import KMeans, KMeansModel\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.evaluation import ClusteringEvaluator\nfrom pyspark.sql.types import *\nfrom pyspark.sql import functions as Fn\nfrom pyspark.sql.functions import col, lit\n\n#data = spark.read.format(\"orc\").load(\"C:/Users/user/cs_daily_features\")\ndata = spark.read.orc(\"hdfs://nameserver/apps/spark/warehouse/cs_daily_features\")\ndata.select([Fn.count(Fn.when(Fn.isnan(c) | col(c).isNull(), c)).alias(c) for c in data.columns]).show()\ndata.printSchema()","user":"admin","dateUpdated":"2020-10-11T16:03:23+0900","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","datan|LP_METER_ID|LP_DCU_ID|daily_20191206|daily_20191207|daily_20191208|daily_20191209|daily_20191210|daily_20191211|daily_20191212|daily_20191213|daily_20191214|daily_20191215|daily_20191216|daily_20191217|daily_20191218|daily_20191219|daily_20191220|daily_20191221|daily_20191222|daily_20191223|daily_20191224|daily_20191225|daily_20191226|daily_20191227|daily_20191228|daily_20191229|daily_20191230|daily_20191231|daily_20200101|daily_20200102|daily_20200103|daily_20200104|daily_20200105|daily_20200106|daily_20200107|daily_20200108|daily_20200109|daily_20200110|daily_20200111|daily_20200112|daily_20200113|daily_20200114|daily_20200115|daily_20200116|daily_20200117|daily_20200118|daily_20200119|daily_20200120|daily_20200121|daily_20200122|daily_20200123|daily_20200124|daily_20200125|daily_20200126|daily_20200127|daily_20200128|daily_20200129|daily_20200130|daily_20200131|daily_20200201|daily_20200202|daily_20200203|daily_20200204|daily_20200205|daily_20200206|daily_20200207|daily_20200208|daily_20200209|daily_20200210|daily_20200211|daily_20200212|daily_20200213|daily_20200214|daily_20200215|daily_20200216|daily_20200217|daily_20200218|daily_20200219|daily_20200220|daily_20200221|daily_20200222|daily_20200223|daily_20200224|daily_20200225|daily_20200226|daily_20200227|daily_20200228|daily_20200229|daily_20200301|daily_20200302|daily_20200303|daily_20200304|daily_20200305|daily_20200306|daily_20200307|daily_20200308|daily_20200309|daily_20200310|daily_20200311|daily_20200312|daily_20200313|daily_20200314|daily_20200315|daily_20200316|daily_20200317|daily_20200318|daily_20200319|daily_20200320|daily_20200321|daily_20200322|daily_20200323|daily_20200324|daily_20200325|daily_20200326|daily_20200327|daily_20200328|daily_20200329|daily_20200330|daily_20200331|daily_20200401|daily_20200402|daily_20200403|daily_20200404|daily_20200405|daily_20200406|daily_20200407|daily_20200408|daily_20200409|daily_20200410|daily_20200411|daily_20200412|daily_20200413|daily_20200414|daily_20200415|daily_20200416|daily_20200417|daily_20200418|daily_20200419|daily_20200420|daily_20200421|daily_20200422|daily_20200423|daily_20200424|daily_20200425|daily_20200426|daily_20200427|daily_20200428|daily_20200429|daily_20200430|daily_20200501|daily_20200502|daily_20200503|daily_20200504|daily_20200505|daily_20200506|daily_20200507|daily_20200508|daily_20200509|daily_20200510|daily_20200511|daily_20200512|daily_20200513|daily_20200514|daily_20200515|daily_20200516|daily_20200517|daily_20200518|daily_20200519|daily_20200520|daily_20200521|daily_20200522|daily_20200523|daily_20200524|daily_20200525|daily_20200526|daily_20200527|daily_20200528|daily_20200529|daily_20200530|daily_20200531|daily_20200601|daily_20200602|daily_20200603|daily_20200604|daily_20200605|daily_20200606|daily_20200607|daily_20200608|daily_20200609|daily_20200610|daily_20200611|daily_20200612|daily_20200613|daily_20200614|daily_20200615|daily_20200616|daily_20200617|daily_20200618|daily_20200619|daily_20200620|daily_20200621|daily_20200622|daily_20200623|daily_20200624|daily_20200625|daily_20200626|daily_20200627|daily_20200628|daily_20200629|daily_20200630|daily_20200701|daily_20200702|daily_20200703|daily_20200704|daily_20200705|daily_20200706|daily_20200707|daily_20200708|daily_20200709|daily_20200710|daily_20200711|daily_20200712|daily_20200713|daily_20200714|daily_20200715|daily_20200716|daily_20200717|daily_20200718|daily_20200719|daily_20200720|daily_20200721|daily_20200722|daily_20200723|daily_20200724|daily_20200725|daily_20200726|daily_20200727|daily_20200728|daily_20200729|daily_20200730|daily_20200731|daily_20200801|daily_20200802|\n+-----------+---------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+--------------+\n|          0|        0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|             0|\nn\nroot\n |-- LP_METER_ID: string (nullable = true)\n |-- LP_DCU_ID: string (nullable = true)\n |-- daily_20191206: double (nullable = true)\n |-- daily_20191207: double (nullable = true)\n |-- daily_20191208: double (nullable = true)\n |-- daily_20191209: double (nullable = true)\n |-- daily_20191210: double (nullable = true)\n |-- daily_20191211: double (nullable = true)\n |-- daily_20191212: double (nullable = true)\n |-- daily_20191213: double (nullable = true)\n |-- daily_20191214: double (nullable = true)\n |-- daily_20191215: double (nullable = true)\n |-- daily_20191216: double (nullable = true)\n |-- daily_20191217: double (nullable = true)\n |-- daily_20191218: double (nullable = true)\n |-- daily_20191219: double (nullable = true)\n |-- daily_20191220: double (nullable = true)\n |-- daily_20191221: double (nullable = true)\n |-- daily_20191222: double (nullable = true)\n |-- daily_20191223: double (nullable = true)\n |-- daily_20191224: double (nullable = true)\n |-- daily_20191225: double (nullable = true)\n |-- daily_20191226: double (nullable = true)\n |-- daily_20191227: double (nullable = true)\n |-- daily_20191228: double (nullable = true)\n |-- daily_20191229: double (nullable = true)\n |-- daily_20191230: double (nullable = true)\n |-- daily_20191231: double (nullable = true)\n |-- daily_20200101: double (nullable = true)\n |-- daily_20200102: double (nullable = true)\n |-- daily_20200103: double (nullable = true)\n |-- daily_20200104: double (nullable = true)\n |-- daily_20200105: double (nullable = true)\n |-- daily_20200106: double (nullable = true)\n |-- daily_20200107: double (nullable = true)\n |-- daily_20200108: double (nullable = true)\n |-- daily_20200109: double (nullable = true)\n |-- daily_20200110: double (nullable = true)\n |-- daily_20200111: double (nullable = true)\n |-- daily_20200112: double (nullable = true)\n |-- daily_20200113: double (nullable = true)\n |-- daily_20200114: double (nullable = true)\n |-- daily_20200115: double (nullable = true)\n |-- daily_20200116: double (nullable = true)\n |-- daily_20200117: double (nullable = true)\n |-- daily_20200118: double (nullable = true)\n |-- daily_20200119: double (nullable = true)\n |-- daily_20200120: double (nullable = true)\n |-- daily_20200121: double (nullable = true)\n |-- daily_20200122: double (nullable = true)\n |-- daily_20200123: double (nullable = true)\n |-- daily_20200124: double (nullable = true)\n |-- daily_20200125: double (nullable = true)\n |-- daily_20200126: double (nullable = true)\n |-- daily_20200127: double (nullable = true)\n |-- daily_20200128: double (nullable = true)\n |-- daily_20200129: double (nullable = true)\n |-- daily_20200130: double (nullable = true)\n |-- daily_20200131: double (nullable = true)\n |-- daily_20200201: double (nullable = true)\n |-- daily_20200202: double (nullable = true)\n |-- daily_20200203: double (nullable = true)\n |-- daily_20200204: double (nullable = true)\n |-- daily_20200205: double (nullable = true)\n |-- daily_20200206: double (nullable = true)\n |-- daily_20200207: double (nullable = true)\n |-- daily_20200208: double (nullable = true)\n |-- daily_20200209: double (nullable = true)\n |-- daily_20200210: double (nullable = true)\n |-- daily_20200211: double (nullable = true)\n |-- daily_20200212: double (nullable = true)\n |-- daily_20200213: double (nullable = true)\n |-- daily_20200214: double (nullable = true)\n |-- daily_20200215: double (nullable = true)\n |-- daily_20200216: double (nullable = true)\n |-- daily_20200217: double (nullable = true)\n |-- daily_20200218: double (nullable = true)\n |-- daily_20200219: double (nullable = true)\n |-- daily_20200220: double (nullable = true)\n |-- daily_20200221: double (nullable = true)\n |-- daily_20200222: double (nullable = true)\n |-- daily_20200223: double (nullable = true)\n |-- daily_20200224: double (nullable = true)\n |-- daily_20200225: double (nullable = true)\n |-- daily_20200226: double (nullable = true)\n |-- daily_20200227: double (nullable = true)\n |-- daily_20200228: double (nullable = true)\n |-- daily_20200229: double (nullable = true)\n |-- daily_20200301: double (nullable = true)\n |-- daily_20200302: double (nullable = true)\n |-- daily_20200303: double (nullable = true)\n |-- daily_20200304: double (nullable = true)\n |-- daily_20200305: double (nullable = true)\n |-- daily_20200306: double (nullable = true)\n |-- daily_20200307: double (nullable = true)\n |-- daily_20200308: double (nullable = true)\n |-- daily_20200309: double (nullable = true)\n |-- daily_20200310: double (nullable = true)\n |-- daily_20200311: double (nullable = true)\n |-- daily_20200312: double (nullable = true)\n |-- daily_20200313: double (nullable = true)\n |-- daily_20200314: double (nullable = true)\n |-- daily_20200315: double (nullable = true)\n |-- daily_20200316: double (nullable = true)\n |-- daily_20200317: double (nullable = true)\n |-- daily_20200318: double (nullable = true)\n |-- daily_20200319: double (nullable = true)\n |-- daily_20200320: double (nullable = true)\n |-- daily_20200321: double (nullable = true)\n |-- daily_20200322: double (nullable = true)\n |-- daily_20200323: double (nullable = true)\n |-- daily_20200324: double (nullable = true)\n |-- daily_20200325: double (nullable = true)\n |-- daily_20200326: double (nullable = true)\n |-- daily_20200327: double (nullable = true)\n |-- daily_20200328: double (nullable = true)\n |-- daily_20200329: double (nullable = true)\n |-- daily_20200330: double (nullable = true)\n |-- daily_20200331: double (nullable = true)\n |-- daily_20200401: double (nullable = true)\n |-- daily_20200402: double (nullable = true)\n |-- daily_20200403: double (nullable = true)\n |-- daily_20200404: double (nullable = true)\n |-- daily_20200405: double (nullable = true)\n |-- daily_20200406: double (nullable = true)\n |-- daily_20200407: double (nullable = true)\n |-- daily_20200408: double (nullable = true)\n |-- daily_20200409: double (nullable = true)\n |-- daily_20200410: double (nullable = true)\n |-- daily_20200411: double (nullable = true)\n |-- daily_20200412: double (nullable = true)\n |-- daily_20200413: double (nullable = true)\n |-- daily_20200414: double (nullable = true)\n |-- daily_20200415: double (nullable = true)\n |-- daily_20200416: double (nullable = true)\n |-- daily_20200417: double (nullable = true)\n |-- daily_20200418: double (nullable = true)\n |-- daily_20200419: double (nullable = true)\n |-- daily_20200420: double (nullable = true)\n |-- daily_20200421: double (nullable = true)\n |-- daily_20200422: double (nullable = true)\n |-- daily_20200423: double (nullable = true)\n |-- daily_20200424: double (nullable = true)\n |-- daily_20200425: double (nullable = true)\n |-- daily_20200426: double (nullable = true)\n |-- daily_20200427: double (nullable = true)\n |-- daily_20200428: double (nullable = true)\n |-- daily_20200429: double (nullable = true)\n |-- daily_20200430: double (nullable = true)\n |-- daily_20200501: double (nullable = true)\n |-- daily_20200502: double (nullable = true)\n |-- daily_20200503: double (nullable = true)\n |-- daily_20200504: double (nullable = true)\n |-- daily_20200505: double (nullable = true)\n |-- daily_20200506: double (nullable = true)\n |-- daily_20200507: double (nullable = true)\n |-- daily_20200508: double (nullable = true)\n |-- daily_20200509: double (nullable = true)\n |-- daily_20200510: double (nullable = true)\n |-- daily_20200511: double (nullable = true)\n |-- daily_20200512: double (nullable = true)\n |-- daily_20200513: double (nullable = true)\n |-- daily_20200514: double (nullable = true)\n |-- daily_20200515: double (nullable = true)\n |-- daily_20200516: double (nullable = true)\n |-- daily_20200517: double (nullable = true)\n |-- daily_20200518: double (nullable = true)\n |-- daily_20200519: double (nullable = true)\n |-- daily_20200520: double (nullable = true)\n |-- daily_20200521: double (nullable = true)\n |-- daily_20200522: double (nullable = true)\n |-- daily_20200523: double (nullable = true)\n |-- daily_20200524: double (nullable = true)\n |-- daily_20200525: double (nullable = true)\n |-- daily_20200526: double (nullable = true)\n |-- daily_20200527: double (nullable = true)\n |-- daily_20200528: double (nullable = true)\n |-- daily_20200529: double (nullable = true)\n |-- daily_20200530: double (nullable = true)\n |-- daily_20200531: double (nullable = true)\n |-- daily_20200601: double (nullable = true)\n |-- daily_20200602: double (nullable = true)\n |-- daily_20200603: double (nullable = true)\n |-- daily_20200604: double (nullable = true)\n |-- daily_20200605: double (nullable = true)\n |-- daily_20200606: double (nullable = true)\n |-- daily_20200607: double (nullable = true)\n |-- daily_20200608: double (nullable = true)\n |-- daily_20200609: double (nullable = true)\n |-- daily_20200610: double (nullable = true)\n |-- daily_20200611: double (nullable = true)\n |-- daily_20200612: double (nullable = true)\n |-- daily_20200613: double (nullable = true)\n |-- daily_20200614: double (nullable = true)\n |-- daily_20200615: double (nullable = true)\n |-- daily_20200616: double (nullable = true)\n |-- daily_20200617: double (nullable = true)\n |-- daily_20200618: double (nullable = true)\n |-- daily_20200619: double (nullable = true)\n |-- daily_20200620: double (nullable = true)\n |-- daily_20200621: double (nullable = true)\n |-- daily_20200622: double (nullable = true)\n |-- daily_20200623: double (nullable = true)\n |-- daily_20200624: double (nullable = true)\n |-- daily_20200625: double (nullable = true)\n |-- daily_20200626: double (nullable = true)\n |-- daily_20200627: double (nullable = true)\n |-- daily_20200628: double (nullable = true)\n |-- daily_20200629: double (nullable = true)\n |-- daily_20200630: double (nullable = true)\n |-- daily_20200701: double (nullable = true)\n |-- daily_20200702: double (nullable = true)\n |-- daily_20200703: double (nullable = true)\n |-- daily_20200704: double (nullable = true)\n |-- daily_20200705: double (nullable = true)\n |-- daily_20200706: double (nullable = true)\n |-- daily_20200707: double (nullable = true)\n |-- daily_20200708: double (nullable = true)\n |-- daily_20200709: double (nullable = true)\n |-- daily_20200710: double (nullable = true)\n |-- daily_20200711: double (nullable = true)\n |-- daily_20200712: double (nullable = true)\n |-- daily_20200713: double (nullable = true)\n |-- daily_20200714: double (nullable = true)\n |-- daily_20200715: double (nullable = true)\n |-- daily_20200716: double (nullable = true)\n |-- daily_20200717: double (nullable = true)\n |-- daily_20200718: double (nullable = true)\n |-- daily_20200719: double (nullable = true)\n |-- daily_20200720: double (nullable = true)\n |-- daily_20200721: double (nullable = true)\n |-- daily_20200722: double (nullable = true)\n |-- daily_20200723: double (nullable = true)\n |-- daily_20200724: double (nullable = true)\n |-- daily_20200725: double (nullable = true)\n |-- daily_20200726: double (nullable = true)\n |-- daily_20200727: double (nullable = true)\n |-- daily_20200728: double (nullable = true)\n |-- daily_20200729: double (nullable = true)\n |-- daily_20200730: double (nullable = true)\n |-- daily_20200731: double (nullable = true)\n |-- daily_20200801: double (nullable = true)\n |-- daily_20200802: double (nullable = true)\n\n"}]},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1602378966271_13963883","id":"20200430-094523_1820140387","dateCreated":"2020-10-11T10:16:06+0900","dateStarted":"2020-10-11T16:03:23+0900","dateFinished":"2020-10-11T16:04:56+0900","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:32406"},{"title":"범주형 컬럼 특징 처리 및 정규화","text":"%pyspark\n\"\"\"\n    최상의 k 값 선택\n    수치형 컬럼을 정규화, scaler\n    numericOnly = data.drop(\"LP_DCU_ID\")\n    범주형 컬럼을 Feature로 사용\n    Energy Theft 분석의 경우 계약전력, dcuId, 사용량 등등을 사용\n    범주형 컬럼 : 계약전력, 지역, 전압 등등\n    수치형 컬럼 : 전력사용량\n\"\"\"\n# DCU ID를 Integer 라벨로 변환\ndcuIndexer = StringIndexer().setInputCol(\"LP_DCU_ID\").setOutputCol(\"dcu_indexed\")\ndcuIndexed = dcuIndexer.fit(data).transform(data)\n# Integer 라벨을 이진 벡터로 표현\nencoder = OneHotEncoderEstimator().setInputCols([\"dcu_indexed\"]).setOutputCols([\"dcu_enc\"])\nencoded = encoder.fit(dcuIndexed).transform(dcuIndexed)\n# 적절한 컬럼명 처리\ninputCols = data.columns\ninputCols.remove(\"LP_METER_ID\")\ninputCols.remove(\"LP_DCU_ID\")\ninputCols.extend([\"dcu_enc\"])\n# 특징 입력 컬럼들을 단일 features 컬럼으로 통합\nassembler = VectorAssembler().setInputCols(inputCols).setOutputCol(\"features\")\nassembled = assembler.transform(encoded)\n# 데이터 정규화\nscaler = MinMaxScaler().setInputCol(\"features\").setOutputCol(\"scaledFeatures\")\nscaled = scaler.fit(assembled).transform(assembled)","user":"admin","dateUpdated":"2020-10-11T16:07:53+0900","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1602378966271_-1692807085","id":"20200428-110228_1188464766","dateCreated":"2020-10-11T10:16:06+0900","dateStarted":"2020-10-11T16:07:53+0900","dateFinished":"2020-10-11T16:08:05+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:32407"},{"title":"Spark K-Means WSS (엘보우 방법) 및 Silhouette 계수 계산","text":"%pyspark\n\"\"\"\n    클러스터 갯수에 따른 WSSSE와 Silhouette 값 계산 및 시각화\n    클러스터 최소 및 최대 갯수 결정\n    MaxIter, Tol 설정, default인 경우와 비교할 필요가 있음\n    \n    클러스터링 알고리즘의 Cost Fn. intra_distance\n\"\"\"\n#import numpy as np\n#import pandas as pd\nfrom pyspark.ml.clustering import KMeans, KMeansModel\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.evaluation import ClusteringEvaluator\n# 엘보우 방법 사용을 위한 WSS 및 실루엣 계수\nwssse = []\nsil_lst = []\nseed=1234\nrange_k = [2,3,4,5,6,7,8,9,10,11,12]\nfor k in range_k:\n    print(\"클러스터 갯수 : \" + str(k))\n    \n    kmeans = KMeans().setSeed(seed).setK(k).setFeaturesCol(\"scaledFeatures\").setTol(1.0e-05).setInitSteps(2)\n    model = kmeans.fit(scaled)\n    \n    intra_distance = model.computeCost(scaled)\n    print(\"WSSSE: \" + str(intra_distance))\n    wssse.append(intra_distance)\n    \n    # 평균 Silhouette\n    clusters = model.transform(scaled)\n    evaluator = ClusteringEvaluator()\n    sil_val = evaluator.evaluate(clusters)\n    sil_lst.append(sil_val)\n    print(\"silhouette with squared euclidean distance: \" + str(sil_val))","user":"admin","dateUpdated":"2020-10-11T16:28:10+0900","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"클러스터 갯수 : 2\nWSSSE: 560.214154255\nsilhouette with squared euclidean distance: 0.739852829065\n클러스터 갯수 : 3\nWSSSE: 383.87686312\nsilhouette with squared euclidean distance: 0.710218125476\n클러스터 갯수 : 4\nWSSSE: 343.033285914\nsilhouette with squared euclidean distance: 0.208452982881\n클러스터 갯수 : 5\nWSSSE: 268.632984841\nsilhouette with squared euclidean distance: 0.514723738678\n클러스터 갯수 : 6\nWSSSE: 262.628237792\nsilhouette with squared euclidean distance: 0.475779167594\n클러스터 갯수 : 7\nWSSSE: 230.794471343\nsilhouette with squared euclidean distance: 0.285040525938\n클러스터 갯수 : 8\nWSSSE: 216.262610861\nsilhouette with squared euclidean distance: 0.250012233542\n클러스터 갯수 : 9\nWSSSE: 205.434752664\nsilhouette with squared euclidean distance: 0.195044572808\n클러스터 갯수 : 10\nWSSSE: 195.087027312\nsilhouette with squared euclidean distance: 0.257345325306\n클러스터 갯수 : 11\nWSSSE: 190.309335042\nsilhouette with squared euclidean distance: 0.154837863764\n클러스터 갯수 : 12\nWSSSE: 169.259924458\nsilhouette with squared euclidean distance: 0.0729534808182\n"}]},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1602378966272_-751970264","id":"20200428-153757_129594111","dateCreated":"2020-10-11T10:16:06+0900","dateStarted":"2020-10-11T16:28:10+0900","dateFinished":"2020-10-11T16:29:28+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:32408"},{"title":"엘보우 방법 및 실루엣 계수 시각화 - 최적 클러스터 수 K  선택","text":"%pyspark\n\"\"\"\n    Jupyter Notebook \n    4.3.1 pyspark cs-lp-idnsa2 k-means clustering visualization - 202010\n\"\"\"\n\nprint(sil_lst)\nprint(wssse)","user":"admin","dateUpdated":"2020-10-11T18:17:25+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[0.7398528290653053, 0.7102181254760674, 0.20845298288085098, 0.5147237386775917, 0.47577916759443084, 0.28504052593773516, 0.25001223354165053, 0.19504457280810478, 0.2573453253064011, 0.15483786376378575, 0.0729534808181827]\n[560.2141542549147, 383.8768631204311, 343.0332859143904, 268.6329848414855, 262.62823779197095, 230.79447134334026, 216.2626108607134, 205.43475266394958, 195.08702731196112, 190.30933504239857, 169.259924458042]\n"}]},"apps":[],"jobName":"paragraph_1602386976945_1837662045","id":"20201011-122936_1009243078","dateCreated":"2020-10-11T12:29:36+0900","dateStarted":"2020-10-11T16:30:38+0900","dateFinished":"2020-10-11T16:30:38+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:32409"},{"title":"실루엣 분석","text":"%pyspark\n\"\"\"\n    Jupyter Notebook \n    4.3.1 pyspark cs-lp-idnsa2 k-means clustering visualization - 202010\n\"\"\"","user":"admin","dateUpdated":"2020-10-11T18:17:12+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602401732454_-1872704969","id":"20201011-163532_1620255531","dateCreated":"2020-10-11T16:35:32+0900","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:32410"},{"title":"Spark K-Means 모델","text":"%pyspark\n\"\"\"\n    적정 클러스터를 찾은 후 MaxIter, Tol 등의 파라미터 조정을 통해 미세 조정\n    model.hasSummary / model.summary.k / \n    \n\"\"\"\nfrom pyspark.ml.clustering import KMeans, KMeansModel\nfrom pyspark.ml.evaluation import ClusteringEvaluator\n\nk= 5\nkmeans = KMeans().setSeed(1234).setK(k).setFeaturesCol(\"scaledFeatures\").setTol(1.0e-05).setInitSteps(2)\nmodel = kmeans.fit(scaled)\n# prediction 컬럼에 클러스터 라벨\nclusters = model.transform(scaled)\n# 각각의 클러스터 사이즈\nclusterSizes = model.summary.clusterSizes\nprint(\"For each cluster, number of data\")\nprint(clusterSizes)","user":"admin","dateUpdated":"2020-10-11T17:35:10+0900","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"For each cluster, number of data\n[40, 9, 8, 48, 30]\n"}]},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1602378966275_-1905324238","id":"20200504-170756_747352789","dateCreated":"2020-10-11T10:16:06+0900","dateStarted":"2020-10-11T17:35:10+0900","dateFinished":"2020-10-11T17:35:15+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:32411"},{"title":"Dense Vector to Array","text":"%pyspark\n\"\"\" Dense Vector to Array\nimport pyspark.sql.functions as Fn\nimport pyspark.sql.types as T\n\n#or: to_array = F.udf(lambda v: list([float(x) for x in v]), T.ArrayType(T.FloatType()))\nto_array = Fn.udf(lambda v: v.toArray().tolist(), T.ArrayType(T.FloatType()))\nscaled = scaled.withColumn('features_to', to_array('scaledFeatures'))","user":"admin","dateUpdated":"2020-10-11T17:40:31+0900","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1602378966276_-110010848","id":"20200824-115429_149692159","dateCreated":"2020-10-11T10:16:06+0900","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32412"},{"text":"%pyspark\n\"\"\"\n    각각의 클러스터에 대해 클러스터 센터와 클러스터 내 데이터 포인트들 간의 거리 계산\n    squared_distance vs distance(sqrt(squared_distance))\n    clusters = clusters.withColumn(\"squaredDistanceFromCenter\", distanceUdf(clusters.scaledFeatures, clusters.prediction))\n     각 클러스터에 대해 distanceFromCenter.max를 구한 후 이의 85~90% 이상 거리의 데이터 포인트를 anomalies로 flag\n    클러스터 내 intra anomalies\n\"\"\"\nfrom pyspark.sql.functions import udf\nfrom pyspark.sql.functions import sqrt\nfrom pyspark.ml.clustering import KMeansModel\nfrom pyspark.sql import functions as Fn\nfrom pyspark.sql.functions import col, lit\n\n# 각 클러스터의 중심\ncenters = model.clusterCenters()\ndistanceUdf = udf(lambda features, prediction: float(features.squared_distance(centers[prediction])))\nclusters = clusters.withColumn(\"distanceFromCenter\", sqrt(distanceUdf(clusters.scaledFeatures, clusters.prediction)))\n# 각 클러스터 내 클러스터 중심으로부터 데이터 포인트와의 최대 거리\nmax_distance = clusters.groupBy(\"prediction\").agg(Fn.max(\"distanceFromCenter\").alias(\"max_distance\"))\nclusters = clusters.join(max_distance, [\"prediction\"])\n# 각 클러스터 내 anomaly 데이터 포인트\nclusters = clusters.withColumn(\"anomaly\", Fn.when(clusters.distanceFromCenter > 0.9* clusters.max_distance, lit(1)).otherwise(lit(0)))\nclusters.where(col(\"anomaly\") == \"1\").select(\"LP_METER_ID\", \"LP_DCU_ID\", \"prediction\", \"anomaly\").show(50)","user":"admin","dateUpdated":"2020-10-11T17:36:41+0900","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------+----------+----------+-------+\n|LP_METER_ID| LP_DCU_ID|prediction|anomaly|\n+-----------+----------+----------+-------+\n|99260000053|DCU_00DK94|         3|      1|\n|99260000321|DCU_0TG312|         4|      1|\n|99260000213|DCU_0TG312|         3|      1|\n|99260000333|DCU_00DK94|         3|      1|\n|99260000268|DCU__TG70C|         1|      1|\n|99260000007|DCU_0DK242|         3|      1|\n|99260000393|DCU_0TG312|         3|      1|\n|99260000191|DCU_00DK94|         2|      1|\n|99260000022|DCU__TG70C|         0|      1|\n+-----------+----------+----------+-------+\n\n"}]},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1602378966276_-1817199640","id":"20200504-072723_1613351490","dateCreated":"2020-10-11T10:16:06+0900","dateStarted":"2020-10-11T17:36:42+0900","dateFinished":"2020-10-11T17:36:55+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:32413"},{"title":"글로벌 anomalies 탐지 - 스마트 미터 데이터에는 미해당","text":"%pyspark\n\"\"\"\n    클러스터에 대해 센터와의 거리를 내림차순으로 정렬\n    각 클러스터에 대해 데이터 포인트들의 distanceFromCenter로부터 임계치(Threshod)를 결정하는데,\n    예를 들어, n 번째 멀리 떨어져 있는 거리를 threshold로 설정, global anomalies\n\"\"\"\nfrom pyspark.sql.functions import lit\n\nclusters.select(clusters.scaledFeatures, clusters.distanceFromCenter, clusters.prediction).orderBy(clusters.distanceFromCenter, ascending=False).show()\n\nthreshold = clusters.select(clusters.scaledFeatures, clusters.distanceFromCenter, clusters.prediction)\\\n    .orderBy(clusters.distanceFromCenter, descending=True).take(100)[99].__getitem__(\"distanceFromCenter\")\n    \nprint(threshold)\n\nclusters = clusters.withColumn(\"global_anomalies\", Fn.when(clusters.distanceFromCenter > threshold, lit(1)).\\\n        otherwise(lit(0)))","user":"admin","dateUpdated":"2020-10-11T10:16:06+0900","config":{"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+------------------+----------+\n|      scaledFeatures|distanceFromCenter|prediction|\n+--------------------+------------------+----------+\n|[2.19338506081428...| 99.03689571657036|         4|\n|[0.05076631379662...|  95.0176670362792|         2|\n|[3.36661637413873...| 92.70106397583767|         5|\n|[3.69877756226205...| 91.96087990566122|        10|\n|[0.68425516203180...| 9.815155543689128|         6|\n|[0.68824561231106...|  9.52351592633076|         6|\n|(196,[0,1,2,3,4,5...| 9.517788572365943|         7|\n|[0.83830600842233...| 9.494778437544602|         2|\n|[0.94945464790803...| 9.388363532303838|         8|\n|(196,[0,1,2,3,4,5...| 9.366834572530697|         7|\n|(196,[0,1,2,3,4,5...| 9.363849338693049|         7|\n|(196,[0,1,2,3,4,5...| 9.287904611573467|         9|\n|[0.36085349891174...| 9.139800290436623|         7|\n|[0.35271687346427...| 9.013413855170205|         9|\n|[3.10780160870932...| 83.14044843949033|         5|\n|[1.14523976453627...| 8.899789952621248|         8|\n|[0.95949890324510...| 8.839446699342297|         8|\n|[1.01131636004211...| 8.832613319700112|         8|\n|[0.82012512763780...| 8.813306773339377|         8|\n|[1.13616878975513...| 8.716688928867443|         8|\n+--------------------+------------------+----------+\nonly showing top 20 rows\n\n26.66461019656195\n"}]},"apps":[],"jobName":"paragraph_1602378966276_-290675570","id":"20200505-063844_784640762","dateCreated":"2020-10-11T10:16:06+0900","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32414"},{"title":"Spark K-Means 기반 전력 사용 이상 미터 목록","text":"%pyspark\nanomaly_id = clusters.filter(col(\"anomaly\") == 1.0).select(\"LP_METER_ID\")\nanomaly_id_list_spark_k_means = [ row[\"LP_METER_ID\"] for row in anomaly_id.collect()]\nprint(\"전력 사용이 의심되는 미터 목록\")\nprint(anomaly_id_list_spark_k_means)","user":"admin","dateUpdated":"2020-10-11T17:40:39+0900","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"전력 사용이 의심되는 미터 목록\n[u'99260000053', u'99260000321', u'99260000213', u'99260000333', u'99260000268', u'99260000007', u'99260000393', u'99260000191', u'99260000022']\n"}]},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1602378966277_506578455","id":"20200906-094931_1117582165","dateCreated":"2020-10-11T10:16:06+0900","dateStarted":"2020-10-11T17:40:39+0900","dateFinished":"2020-10-11T17:40:45+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:32415"},{"text":"%pyspark\n\"\"\"\n    DCU 별 전력 사용 이상 미터 목록\n\"\"\"\nmeter_id_per_dcu = clusters.where(col(\"anomaly\") == \"1\").select(\"LP_DCU_ID\", \"LP_METER_ID\").groupBy(\"LP_DCU_ID\")\nmeter_id_per_dcu.agg(Fn.collect_list(\"LP_METER_ID\"), Fn.countDistinct(\"LP_METER_ID\")).show(10, False)","user":"admin","dateUpdated":"2020-10-11T17:42:02+0900","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+---------------------------------------+---------------------------+\n|LP_DCU_ID |collect_list(LP_METER_ID)              |count(DISTINCT LP_METER_ID)|\n+----------+---------------------------------------+---------------------------+\n|DCU_0TG312|[99260000213, 99260000393, 99260000321]|3                          |\n|DCU_00DK94|[99260000333, 99260000053, 99260000191]|3                          |\n|DCU_0DK242|[99260000007]                          |1                          |\n|DCU__TG70C|[99260000268, 99260000022]             |2                          |\n+----------+---------------------------------------+---------------------------+\n\n"}]},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1602378966277_1761202565","id":"20200906-120654_1319828930","dateCreated":"2020-10-11T10:16:06+0900","dateStarted":"2020-10-11T17:42:02+0900","dateFinished":"2020-10-11T17:42:09+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:32416"},{"title":"클러스터 히스토그램","text":"%pyspark\n\"\"\"\n    Jupyter Notebook \n    4.3.1 pyspark cs-lp-idnsa2 k-means clustering visualization - 202010\n\"\"\"\nclusters5 = clusters.select(\"LP_METER_ID\", \"prediction\", \"distanceFromCenter\", \"max_distance\", \"anomaly\")\nclusters5.write.option(\"orc.compress\",\"snappy\").orc(\"/apps/spark/warehouse/k-means-clusters\")","user":"admin","dateUpdated":"2020-10-11T18:17:01+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1602405866085_1825851204","id":"20201011-174426_1767258411","dateCreated":"2020-10-11T17:44:26+0900","dateStarted":"2020-10-11T17:50:14+0900","dateFinished":"2020-10-11T17:50:20+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:32417"},{"text":"%pyspark\n# 클러스터 라벨\nlabels = [ row[\"prediction\"] for row in clusters.select(\"prediction\").\\\n        withColumn(\"prediction\", col(\"prediction\").cast(\"float\")).collect()]\ncluster_labels = np.array(labels)","user":"admin","dateUpdated":"2020-10-11T10:16:06+0900","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1602378966277_1548950356","id":"20200906-130551_1989170732","dateCreated":"2020-10-11T10:16:06+0900","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32418"},{"title":"클러스터 시각화","text":"%pyspark\nanomaly_id = clusters.filter(col(\"anomaly\") == 1.0).select(\"LP_METER_ID\")\nanomaly_id.write.option(\"orc.compress\", \"snappy\").orc(\"/apps/spark/warehouse/meter_id_list_k_means\")","user":"admin","dateUpdated":"2020-10-11T18:12:22+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1602407076719_-382891051","id":"20201011-180436_385357903","dateCreated":"2020-10-11T18:04:36+0900","dateStarted":"2020-10-11T18:12:22+0900","dateFinished":"2020-10-11T18:12:30+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:32419"},{"text":"%pyspark\n","user":"admin","dateUpdated":"2020-10-11T10:16:06+0900","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1602378966278_209392656","id":"20200906-124745_62869478","dateCreated":"2020-10-11T10:16:06+0900","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32420"}],"name":"4.3.1 pyspark cs-lp-idnsa2 k-means clustering - 202010","id":"2FMAXCRRF","noteParams":{},"noteForms":{},"angularObjects":{"spark2:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}